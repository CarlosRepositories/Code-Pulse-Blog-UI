{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nclass AuthService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n    this.$user = new BehaviorSubject(undefined);\n  }\n  Login(request) {\n    return this.http.post(`${environment.appBaseUrl}Auth/login`, {\n      email: request.email,\n      password: request.password\n    });\n  }\n  setUser(user) {\n    this.$user.next(user);\n    localStorage.setItem('user-email', user.email);\n    localStorage.setItem('user-roles', user.roles.join(','));\n  }\n  getUser() {\n    const email = localStorage.getItem('user-email');\n    const roles = localStorage.getItem('user-roles');\n    if (email && roles) {\n      const user = {\n        email: email,\n        roles: roles.split(',')\n      };\n      return user;\n    }\n    return undefined;\n  }\n  user() {\n    return this.$user.asObservable();\n  }\n  logout() {\n    localStorage.clear();\n    this.cookieService.delete('Authorization', '/');\n    this.$user.next(undefined);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthService };","map":{"version":3,"names":["BehaviorSubject","environment","AuthService","constructor","http","cookieService","$user","undefined","Login","request","post","appBaseUrl","email","password","setUser","user","next","localStorage","setItem","roles","join","getUser","getItem","split","asObservable","logout","clear","delete","_","i0","ɵɵinject","i1","HttpClient","i2","CookieService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\carrl\\OneDrive\\Área de Trabalho\\estudos\\Angular\\UI\\codepulse\\src\\app\\features\\auth\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginRequest } from '../models/login-request.model';\nimport { LoginResponse } from '../models/login-response.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  $user = new BehaviorSubject<User | undefined>(undefined);\n\n  constructor(private http: HttpClient,\n              private cookieService: CookieService) { }\n\n  Login(request: LoginRequest) : Observable<LoginResponse>{\n    return this.http.post<LoginResponse> (`${environment.appBaseUrl}Auth/login`, {\n      email: request.email,\n      password: request.password\n    });\n  }\n\n  setUser(user: User) : void{\n    this.$user.next(user);\n    localStorage.setItem('user-email', user.email);\n    localStorage.setItem('user-roles', user.roles.join(','));\n  }\n\n  getUser(): User | undefined {\n    const email = localStorage.getItem('user-email');\n    const roles = localStorage.getItem('user-roles');\n\n    if(email && roles){\n      const user: User = {\n        email: email,\n        roles: roles.split(',')\n      };\n\n      return user;\n    }\n\n    return undefined;    \n  }\n\n  user() : Observable<User | undefined> {\n    return this.$user.asObservable();\n  }\n\n  logout() : void{\n    localStorage.clear();\n    this.cookieService.delete('Authorization', '/');\n    this.$user.next(undefined);\n  }\n\n}\n"],"mappings":"AAIA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,WAAW,QAAQ,8BAA8B;;;;AAI1D,MAGaC,WAAW;EAItBC,YAAoBC,IAAgB,EAChBC,aAA4B;IAD5B,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,aAAa,GAAbA,aAAa;IAHjC,KAAAC,KAAK,GAAG,IAAIN,eAAe,CAAmBO,SAAS,CAAC;EAGJ;EAEpDC,KAAKA,CAACC,OAAqB;IACzB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAiB,GAAGT,WAAW,CAACU,UAAU,YAAY,EAAE;MAC3EC,KAAK,EAAEH,OAAO,CAACG,KAAK;MACpBC,QAAQ,EAAEJ,OAAO,CAACI;KACnB,CAAC;EACJ;EAEAC,OAAOA,CAACC,IAAU;IAChB,IAAI,CAACT,KAAK,CAACU,IAAI,CAACD,IAAI,CAAC;IACrBE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,IAAI,CAACH,KAAK,CAAC;IAC9CK,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,IAAI,CAACI,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC1D;EAEAC,OAAOA,CAAA;IACL,MAAMT,KAAK,GAAGK,YAAY,CAACK,OAAO,CAAC,YAAY,CAAC;IAChD,MAAMH,KAAK,GAAGF,YAAY,CAACK,OAAO,CAAC,YAAY,CAAC;IAEhD,IAAGV,KAAK,IAAIO,KAAK,EAAC;MAChB,MAAMJ,IAAI,GAAS;QACjBH,KAAK,EAAEA,KAAK;QACZO,KAAK,EAAEA,KAAK,CAACI,KAAK,CAAC,GAAG;OACvB;MAED,OAAOR,IAAI;;IAGb,OAAOR,SAAS;EAClB;EAEAQ,IAAIA,CAAA;IACF,OAAO,IAAI,CAACT,KAAK,CAACkB,YAAY,EAAE;EAClC;EAEAC,MAAMA,CAAA;IACJR,YAAY,CAACS,KAAK,EAAE;IACpB,IAAI,CAACrB,aAAa,CAACsB,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC;IAC/C,IAAI,CAACrB,KAAK,CAACU,IAAI,CAACT,SAAS,CAAC;EAC5B;EAAC,QAAAqB,CAAA,G;qBA5CU1B,WAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjC,WAAW;IAAAkC,OAAA,EAAXlC,WAAW,CAAAmC,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPpC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}